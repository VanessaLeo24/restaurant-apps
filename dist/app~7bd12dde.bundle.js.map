{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IAiCH,QA9ByB,CACjBC,SADiB,SACRC,GAAI,oGACZA,EADY,iEAIHP,EAJG,uCAIQQ,IAAIT,EAAmBQ,IAJ/B,4CAKlB,EAEKE,aARiB,WAQF,iHACLT,EADK,uCACMU,OAAOX,IADb,4CAEpB,EAEKY,SAZiB,SAYRC,GAAO,oGAEfA,EAAMC,eAAe,MAFN,iEAMNb,EANM,uCAMKc,IAAIf,EAAmBa,IAN5B,4CAOrB,EAEKG,YArBiB,SAqBLR,GAAI,iHACNP,EADM,8CACYD,EAAmBQ,IAD/B,4CAErB,EAEKS,aAzBiB,SAyBJC,GAAO,sIAEzB,gDChCH,QALqB,CACnBC,KAAM,GAAF,OAAKrB,EAAAA,EAAAA,SAAL,QACJsB,OAAQ,SAACZ,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,sPCHV,4wNAeA,QAdMa,8LACJ,sGACyBC,MAAMC,EAAAA,MAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,gIAMA,WAAyBnB,GAAzB,yFACyBc,MAAMC,EAAAA,OAAoBf,IADnD,cACQgB,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaE,YAHtB,yJAPIP,mCCWN,QAbe,CAEbQ,SAAU,uCACVC,eAAgB,qDAEhBC,iBAAkB,QAClBC,WAAY,cACZnC,cAAe,qBACfE,iBAAkB,EAClBC,kBAAmB,mECDfiC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,SAC/BC,OAAQF,SAASC,cAAc,WAC/BE,KAAMH,SAASC,cAAc,SAC7BG,QAASJ,SAASC,cAAc,WAGlCI,OAAOC,iBAAiB,cAAc,WACpCT,EAAIU,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BT,EAAIU,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/therestodb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestos() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putResto(resto) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!resto.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\r\n  },\r\n\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchRestos(query) {\r\n\r\n  },\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  HOME: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass TheRestoDbSource {\r\n  static async home() {\r\n    const response = await fetch(API_ENDPOINT.HOME);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailResto(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default TheRestoDbSource;\r\n","const CONFIG = {\r\n  // KEY: 'YOUR_API_KEY',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  // BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: 'RestoApp-V1',\r\n  DATABASE_NAME: 'resto-app-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restos',\r\n\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#menu'),\n  drawer: document.querySelector('#drawer'),\n  hero: document.querySelector('.hero'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllRestos","getAll","putResto","resto","hasOwnProperty","put","deleteResto","searchRestos","query","HOME","DETAIL","TheRestoDbSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","hero","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}